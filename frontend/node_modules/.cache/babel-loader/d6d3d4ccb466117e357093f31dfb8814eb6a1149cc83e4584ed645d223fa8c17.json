{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-router-project\\\\router\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  //   const [isLoading, setIsLoading] = useState(false);\n  //   const [fetchedEvents, setFetchedEvents] = useState();\n  //   const [error, setError] = useState();\n\n  //   useEffect(() => {\n  //     async function fetchEvents() {\n  //       setIsLoading(true);\n\n  //       setIsLoading(false);\n  //     }\n\n  //     fetchEvents();\n  //   }, []);\n  //   return (\n  //     <>\n  //       <div style={{ textAlign: \"center\" }}>\n  //         {isLoading && <p>Loading...</p>}\n  //         {error && <p>{error}</p>}\n  //       </div>\n  //       {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\n  //     </>\n  // );\n  const data = useLoaderData();\n  const events = data.events;\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw {\n      message: \"Could not fetch events.\"\n    };\n    // return { isError: true, message: \"Could not fetch events.\" };\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","$RefreshReg$"],"sources":["D:/react-router-project/router/frontend/src/pages/Events.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\nimport { useLoaderData } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  //   const [isLoading, setIsLoading] = useState(false);\r\n  //   const [fetchedEvents, setFetchedEvents] = useState();\r\n  //   const [error, setError] = useState();\r\n\r\n  //   useEffect(() => {\r\n  //     async function fetchEvents() {\r\n  //       setIsLoading(true);\r\n\r\n  //       setIsLoading(false);\r\n  //     }\r\n\r\n  //     fetchEvents();\r\n  //   }, []);\r\n  //   return (\r\n  //     <>\r\n  //       <div style={{ textAlign: \"center\" }}>\r\n  //         {isLoading && <p>Loading...</p>}\r\n  //         {error && <p>{error}</p>}\r\n  //       </div>\r\n  //       {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\r\n  //     </>\r\n  // );\r\n  const data = useLoaderData();\r\n  const events = data.events;\r\n\r\n  if (data.isError) {\r\n    return <p>{data.message}</p>;\r\n  }\r\n\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    throw { message: \"Could not fetch events.\" };\r\n    // return { isError: true, message: \"Could not fetch events.\" };\r\n  } else {\r\n    // const resData = await response.json();\r\n    // return resData.events;\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA;;AAEA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,IAAI,GAAGN,aAAa,EAAE;EAC5B,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,IAAID,IAAI,CAACE,OAAO,EAAE;IAChB,oBAAOL,OAAA;MAAAM,QAAA,EAAIH,IAAI,CAACI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC9B;EAEA,oBAAOX,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACvC;AAACT,EAAA,CA/BQD,UAAU;EAAA,QAuBJJ,aAAa;AAAA;AAAAe,EAAA,GAvBnBX,UAAU;AAiCnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM;MAAET,OAAO,EAAE;IAA0B,CAAC;IAC5C;EACF,CAAC,MAAM;IACL;IACA;IACA,OAAOO,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}